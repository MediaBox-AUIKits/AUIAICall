plugins {
    id 'com.android.library'
}

android {
    compileSdk androidCompileSdkVersion

    defaultConfig {
        minSdk androidMinSdkVersion
        targetSdk androidTargetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME : 'aicall']
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "TEST_ENV_MODE", getBoolProperty("TEST_ENV_MODE") ? "true" : "false"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "TEST_ENV_MODE", getBoolProperty("TEST_ENV_MODE") ? "true" : "false"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation externalAndroidXAppcompat
    implementation externalAndroidDesign
    implementation externalAndroidXConstraintlayout
    testImplementation externalJunit
    androidTestImplementation externalTestJunit
    androidTestImplementation externalEspresso
    implementation externalAndroidAnnotation
    implementation externalMarkwon
    implementation externalMarkwonImage
    implementation externalMarkwonImageGlide
    implementation externalGlide
    implementation externalGlideProcessor

    implementation externalDialogPlus
    implementation (externalRecyclerViewAdapterHelper) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }
    implementation externalSmartRefreshLayutKernel     //核心必须依赖
    implementation externalSmartRefreshLayutHeader    //经典刷新头
    implementation externalSmartRefreshLayutFooter   //经典加载
    implementation (externalPermissionX) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }
    implementation externalStyleableToast
    implementation externalSimpleZXing

    implementation externalARouter
    annotationProcessor externalARouterCompiler


    if(getBoolProperty('USE_AICALLKIT_AAR')) {
        implementation 'com.aliyun.auikits.android:ARTCAICallKit:2.3.0'
    } else {
        implementation project(':AUIAICallEngine')
        implementation project(':ARTCAICallKit')
    }
    implementation externalOKHTTP
    implementation externalOKHTTPLogInterceptor
    implementation externalAllInOne
    implementation externalAliVCInteractionMessage
    implementation project(':AUIBaseKits::AUICommon')
    implementation externalLottie
}

def getBoolProperty(String gradlePropertyKey) {
    if (findProperty(gradlePropertyKey) == null) {
        println("${gradlePropertyKey} undefined")
        return false
    } else {
        println("${gradlePropertyKey} : " + getProperty(gradlePropertyKey))
        return Boolean.valueOf(getProperty(gradlePropertyKey))
    }
}
